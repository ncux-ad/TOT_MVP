# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
# –ó–∞–ø—É—Å–∫–∞—Ç—å –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞

param(
    [string]$Action = "show",
    [string]$Key = "",
    [string]$Value = ""
)

$envFile = ".env"

function Show-EnvFile {
    Write-Host "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ .env —Ñ–∞–π–ª–∞:" -ForegroundColor Cyan
    if (Test-Path $envFile) {
        Get-Content $envFile | ForEach-Object {
            if ($_ -match "^([^#][^=]+)=(.*)$") {
                $key = $matches[1]
                $value = $matches[2]
                Write-Host "  $key = $value" -ForegroundColor Green
            } else {
                Write-Host "  $_" -ForegroundColor Gray
            }
        }
    } else {
        Write-Host "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
    }
}

function Set-EnvVariable {
    param([string]$Key, [string]$Value)
    
    if (-not (Test-Path $envFile)) {
        Write-Host "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
        return
    }
    
    $content = Get-Content $envFile
    $updated = $false
    
    for ($i = 0; $i -lt $content.Length; $i++) {
        if ($content[$i] -match "^$Key=") {
            $content[$i] = "$Key=$Value"
            $updated = $true
            break
        }
    }
    
    if (-not $updated) {
        $content += "$Key=$Value"
    }
    
    $content | Set-Content $envFile
    Write-Host "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $Key —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ $Value" -ForegroundColor Green
}

function Test-EnvVariables {
    Write-Host "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..." -ForegroundColor Cyan
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    if (Test-Path $envFile) {
        Get-Content $envFile | ForEach-Object {
            if ($_ -match "^([^#][^=]+)=(.*)$") {
                $key = $matches[1]
                $value = $matches[2]
                [Environment]::SetEnvironmentVariable($key, $value, "Process")
            }
        }
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    $requiredVars = @("DATABASE_URL", "JWT_SECRET", "JWT_ALGORITHM")
    
    foreach ($var in $requiredVars) {
        $value = [Environment]::GetEnvironmentVariable($var)
        if ($value) {
            Write-Host "‚úÖ $var = $value" -ForegroundColor Green
        } else {
            Write-Host "‚ùå $var –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞" -ForegroundColor Red
        }
    }
}

function Create-EnvTemplate {
    Write-Host "üìù –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ .env —Ñ–∞–π–ª–∞..." -ForegroundColor Cyan
    
    $template = @"
# Database - SQLite –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
DATABASE_URL=sqlite:///./tot_mvp.db

# JWT
JWT_SECRET=your-super-secret-jwt-key-change-in-production
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24

# CORS
CORS_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:3002,http://localhost:3003

# Payment Systems - –†–æ—Å—Å–∏–π—Å–∫–∏–µ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã
# –ÆKassa
YUKASSA_SHOP_ID=your-yookassa-shop-id
YUKASSA_SECRET_KEY=your-yookassa-secret-key

# –°–ë–ü (–°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π)
SBP_MERCHANT_ID=your-sbp-merchant-id
SBP_PRIVATE_KEY_PATH=/path/to/sbp/private/key.pem

# Notification Service
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_PHONE_NUMBER=your-twilio-phone-number

# Firebase (–¥–ª—è push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
FIREBASE_CREDENTIALS_PATH=/path/to/firebase-credentials.json

# Geo Service
GEOCODING_API_KEY=your-geocoding-api-key

# Monitoring
PROMETHEUS_PORT=9090
GRAFANA_PORT=3004

# Logging
LOG_LEVEL=INFO

# Development
DEBUG=true
ENVIRONMENT=development
"@
    
    $template | Set-Content $envFile
    Write-Host "‚úÖ –®–∞–±–ª–æ–Ω .env —Ñ–∞–π–ª–∞ —Å–æ–∑–¥–∞–Ω!" -ForegroundColor Green
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
switch ($Action.ToLower()) {
    "show" {
        Show-EnvFile
    }
    "set" {
        if ($Key -and $Value) {
            Set-EnvVariable -Key $Key -Value $Value
        } else {
            Write-Host "‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏–µ: .\scripts\manage-env.ps1 -Action set -Key KEY -Value VALUE" -ForegroundColor Red
        }
    }
    "test" {
        Test-EnvVariables
    }
    "create" {
        Create-EnvTemplate
    }
    default {
        Write-Host "üìã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞:" -ForegroundColor Cyan
        Write-Host "  .\scripts\manage-env.ps1 -Action show" -ForegroundColor White
        Write-Host "  .\scripts\manage-env.ps1 -Action set -Key DATABASE_URL -Value sqlite:///./tot_mvp.db" -ForegroundColor White
        Write-Host "  .\scripts\manage-env.ps1 -Action test" -ForegroundColor White
        Write-Host "  .\scripts\manage-env.ps1 -Action create" -ForegroundColor White
    }
} 
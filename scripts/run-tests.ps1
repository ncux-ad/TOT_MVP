#!/usr/bin/env pwsh
"""
@file: run-tests.ps1
@description: –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ –¢–û–¢
@dependencies: Python, pytest, venv
@created: 2024-08-06
"""

Write-Host "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ –¢–û–¢..." -ForegroundColor Green

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if (Test-Path ".\venv\Scripts\Activate.ps1") {
    Write-Host "üîß –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..." -ForegroundColor Yellow
    & .\venv\Scripts\Activate.ps1
} else {
    Write-Host "‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!" -ForegroundColor Red
    exit 1
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..." -ForegroundColor Yellow
pip install -r backend/api-gateway/requirements-test.txt
pip install -r backend/user-service/requirements-test.txt

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ —Å –æ—Ç—á–µ—Ç–æ–º
function Run-Tests {
    param(
        [string]$ServiceName,
        [string]$TestPath,
        [string]$ReportPath
    )
    
    Write-Host "üß™ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã $ServiceName..." -ForegroundColor Cyan
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
    if (!(Test-Path ".\test-reports")) {
        New-Item -ItemType Directory -Path ".\test-reports" | Out-Null
    }
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
    $result = pytest $TestPath `
        --cov=$TestPath `
        --cov-report=html:test-reports/$ReportPath `
        --cov-report=term-missing `
        --verbose `
        --tb=short
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –¢–µ—Å—Ç—ã $ServiceName –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –¢–µ—Å—Ç—ã $ServiceName –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å!" -ForegroundColor Red
    }
    
    return $LASTEXITCODE
}

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã API Gateway
$gatewayResult = Run-Tests -ServiceName "API Gateway" -TestPath "backend/api-gateway/tests" -ReportPath "api-gateway-coverage"

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã User Service  
$userServiceResult = Run-Tests -ServiceName "User Service" -TestPath "backend/user-service/tests" -ReportPath "user-service-coverage"

# –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
$totalResult = $gatewayResult + $userServiceResult

Write-Host "`nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:" -ForegroundColor Magenta
Write-Host "API Gateway: $(if ($gatewayResult -eq 0) { '‚úÖ –ü–†–û–®–õ–ò' } else { '‚ùå –ü–†–û–í–ê–õ–ò–õ–ò–°–¨' })" -ForegroundColor $(if ($gatewayResult -eq 0) { 'Green' } else { 'Red' })
Write-Host "User Service: $(if ($userServiceResult -eq 0) { '‚úÖ –ü–†–û–®–õ–ò' } else { '‚ùå –ü–†–û–í–ê–õ–ò–õ–ò–°–¨' })" -ForegroundColor $(if ($userServiceResult -eq 0) { 'Green' } else { 'Red' })

if ($totalResult -eq 0) {
    Write-Host "`nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!" -ForegroundColor Green
    Write-Host "üìÅ –û—Ç—á–µ—Ç—ã –ø–æ–∫—Ä—ã—Ç–∏—è: .\test-reports\" -ForegroundColor Cyan
} else {
    Write-Host "`n‚ö†Ô∏è –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ò–õ–ò–°–¨!" -ForegroundColor Yellow
    Write-Host "üìÅ –û—Ç—á–µ—Ç—ã –ø–æ–∫—Ä—ã—Ç–∏—è: .\test-reports\" -ForegroundColor Cyan
}

Write-Host "`nüîç –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤ –ø–æ–∫—Ä—ã—Ç–∏—è –æ—Ç–∫—Ä–æ–π—Ç–µ:" -ForegroundColor Cyan
Write-Host "   .\test-reports\api-gateway-coverage\index.html" -ForegroundColor White
Write-Host "   .\test-reports\user-service-coverage\index.html" -ForegroundColor White

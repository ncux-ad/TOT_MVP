# –°–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
# –ó–∞–ø—É—Å–∫–∞—Ç—å –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤

Write-Host "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –¢–û–¢..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
if (-not (Test-Path "backend")) {
    Write-Host "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞!" -ForegroundColor Red
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
function Test-Endpoint {
    param(
        [string]$Url,
        [string]$Method = "GET",
        [string]$Description,
        [hashtable]$Headers = @{}
    )
    
    try {
        $response = Invoke-RestMethod -Uri $Url -Method $Method -Headers $Headers -ErrorAction Stop
        Write-Host "‚úÖ $Description" -ForegroundColor Green
        return $true
    } catch {
        $statusCode = $_.Exception.Response.StatusCode.value__
        Write-Host "‚ùå $Description (HTTP $statusCode)" -ForegroundColor Red
        return $false
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ —Å –æ–∂–∏–¥–∞–µ–º—ã–º —Å—Ç–∞—Ç—É—Å–æ–º
function Test-EndpointWithStatus {
    param(
        [string]$Url,
        [string]$Method = "GET",
        [string]$Description,
        [int]$ExpectedStatus = 200,
        [hashtable]$Headers = @{}
    )
    
    try {
        $response = Invoke-RestMethod -Uri $Url -Method $Method -Headers $Headers -ErrorAction Stop
        Write-Host "‚úÖ $Description" -ForegroundColor Green
        return $true
    } catch {
        $statusCode = $_.Exception.Response.StatusCode.value__
        if ($statusCode -eq $ExpectedStatus) {
            Write-Host "‚úÖ $Description (–æ–∂–∏–¥–∞–µ–º—ã–π —Å—Ç–∞—Ç—É—Å $ExpectedStatus)" -ForegroundColor Green
            return $true
        } else {
            Write-Host "‚ùå $Description (HTTP $statusCode, –æ–∂–∏–¥–∞–ª—Å—è $ExpectedStatus)" -ForegroundColor Red
            return $false
        }
    }
}

Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Cyan

# –ü—Ä–æ–≤–µ—Ä—è–µ–º health check —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
$healthTests = @(
    @{Url="http://localhost:8000/health"; Description="API Gateway Health Check"},
    @{Url="http://localhost:8001/health"; Description="User Service Health Check"},
    @{Url="http://localhost:8002/health"; Description="Profile Service Health Check"},
    @{Url="http://localhost:8003/health"; Description="Booking Service Health Check"}
)

$healthResults = @()
foreach ($test in $healthTests) {
    $result = Test-Endpoint -Url $test.Url -Description $test.Description
    $healthResults += $result
}

Write-Host "`nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏..." -ForegroundColor Cyan

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
$statsTests = @(
    @{Url="http://localhost:8001/users/count"; Description="User Service - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"},
    @{Url="http://localhost:8002/doctor-profiles/count"; Description="Profile Service - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä–∞—á–µ–π"},
    @{Url="http://localhost:8002/clinic-profiles/count"; Description="Profile Service - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–Ω–∏–∫"},
    @{Url="http://localhost:8003/bookings/count"; Description="Booking Service - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤"}
)

$statsResults = @()
foreach ($test in $statsTests) {
    $result = Test-Endpoint -Url $test.Url -Description $test.Description
    $statsResults += $result
}

Write-Host "`nüîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏..." -ForegroundColor Cyan

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–æ–∂–∏–¥–∞–µ–º 401 –±–µ–∑ —Ç–æ–∫–µ–Ω–∞)
$authTests = @(
    @{Url="http://localhost:8000/auth/me"; Description="API Gateway - /auth/me (–±–µ–∑ —Ç–æ–∫–µ–Ω–∞)"; ExpectedStatus=401},
    @{Url="http://localhost:8000/admin/users"; Description="API Gateway - /admin/users (–±–µ–∑ —Ç–æ–∫–µ–Ω–∞)"; ExpectedStatus=401},
    @{Url="http://localhost:8000/api/dashboard/stats"; Description="API Gateway - /api/dashboard/stats (–±–µ–∑ —Ç–æ–∫–µ–Ω–∞)"; ExpectedStatus=401}
)

$authResults = @()
foreach ($test in $authTests) {
    $result = Test-EndpointWithStatus -Url $test.Url -Description $test.Description -ExpectedStatus $test.ExpectedStatus
    $authResults += $result
}

Write-Host "`nüë• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..." -ForegroundColor Cyan

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
$userTests = @(
    @{Url="http://localhost:8001/users"; Description="User Service - —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"},
    @{Url="http://localhost:8001/users?page=1&limit=10"; Description="User Service - —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"}
)

$userResults = @()
foreach ($test in $userTests) {
    $result = Test-Endpoint -Url $test.Url -Description $test.Description
    $userResults += $result
}

Write-Host "`nüë®‚Äç‚öïÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –≤—Ä–∞—á–µ–π..." -ForegroundColor Cyan

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –≤—Ä–∞—á–µ–π
$doctorTests = @(
    @{Url="http://localhost:8002/doctor-profiles/"; Description="Profile Service - —Å–ø–∏—Å–æ–∫ –≤—Ä–∞—á–µ–π"}
)

$doctorResults = @()
foreach ($test in $doctorTests) {
    $result = Test-Endpoint -Url $test.Url -Description $test.Description
    $doctorResults += $result
}

Write-Host "`nüè• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –∫–ª–∏–Ω–∏–∫..." -ForegroundColor Cyan

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –∫–ª–∏–Ω–∏–∫
$clinicTests = @(
    @{Url="http://localhost:8002/clinic-profiles/"; Description="Profile Service - —Å–ø–∏—Å–æ–∫ –∫–ª–∏–Ω–∏–∫"}
)

$clinicResults = @()
foreach ($test in $clinicTests) {
    $result = Test-Endpoint -Url $test.Url -Description $test.Description
    $clinicResults += $result
}

# –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
$allResults = $healthResults + $statsResults + $authResults + $userResults + $doctorResults + $clinicResults
$passed = ($allResults | Where-Object { $_ -eq $true }).Count
$total = $allResults.Count

Write-Host "`nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:" -ForegroundColor Cyan
Write-Host "‚úÖ –£—Å–ø–µ—à–Ω–æ: $passed –∏–∑ $total" -ForegroundColor Green
Write-Host "‚ùå –û—à–∏–±–æ–∫: $($total - $passed) –∏–∑ $total" -ForegroundColor Red

if ($passed -eq $total) {
    Write-Host "`nüéâ –í—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!" -ForegroundColor Green
} else {
    Write-Host "`n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞–º–∏" -ForegroundColor Yellow
}

Write-Host "`nüìö Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:" -ForegroundColor Cyan
Write-Host "‚Ä¢ API Gateway: http://localhost:8000/docs" -ForegroundColor White
Write-Host "‚Ä¢ User Service: http://localhost:8001/docs" -ForegroundColor White
Write-Host "‚Ä¢ Profile Service: http://localhost:8002/docs" -ForegroundColor White

Write-Host "`nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:" -ForegroundColor Cyan
Write-Host "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö" -ForegroundColor White
Write-Host "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Swagger UI –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è" -ForegroundColor White
Write-Host "‚Ä¢ –û–±–Ω–æ–≤–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤" -ForegroundColor White

exit 0 
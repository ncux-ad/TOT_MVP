import httpx
import asyncio

async def test_gateway_to_user_service():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è API Gateway –∫ User Service"""
    url = "http://localhost:8001/auth/login"
    data = {
        "email": "admin@tot.ru",
        "password": "admin123"
    }
    
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ User Service: {url}")
    
    try:
        async with httpx.AsyncClient(timeout=30.0) as client:
            response = await client.post(url, json=data)
            print(f"Status Code: {response.status_code}")
            print(f"Response: {response.text}")
            
            if response.status_code == 200:
                print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ User Service —É—Å–ø–µ—à–Ω–æ!")
                return True
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ User Service")
                return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

async def test_api_gateway_forward():
    """–¢–µ—Å—Ç –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ API Gateway"""
    url = "http://localhost:8000/auth/login"
    data = {
        "email": "admin@tot.ru",
        "password": "admin123"
    }
    
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ—Å—ã–ª–∫—É —á–µ—Ä–µ–∑ API Gateway: {url}")
    
    try:
        async with httpx.AsyncClient(timeout=30.0) as client:
            response = await client.post(url, json=data)
            print(f"Status Code: {response.status_code}")
            print(f"Response: {response.text}")
            
            if response.status_code == 200:
                result = response.json()
                if result.get('status_code') == 503:
                    print("‚ùå API Gateway –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ User Service")
                    return False
                else:
                    print("‚úÖ API Gateway —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
                    return True
            else:
                print("‚ùå –û—à–∏–±–∫–∞ API Gateway")
                return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

async def main():
    print("=== –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è API Gateway ===\n")
    
    # –¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ User Service
    user_service_ok = await test_gateway_to_user_service()
    
    # –¢–µ—Å—Ç —á–µ—Ä–µ–∑ API Gateway
    gateway_ok = await test_api_gateway_forward()
    
    print("\n=== –†–µ–∑—É–ª—å—Ç–∞—Ç—ã ===")
    if user_service_ok:
        print("‚úÖ User Service –¥–æ—Å—Ç—É–ø–µ–Ω")
    else:
        print("‚ùå User Service –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        
    if gateway_ok:
        print("‚úÖ API Gateway —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("‚ùå API Gateway –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")

if __name__ == "__main__":
    asyncio.run(main()) 
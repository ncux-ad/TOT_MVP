#!/usr/bin/env python3
"""
@file: test_gateway_logs.py
@description: –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤ API Gateway
@dependencies: requests
@created: 2024-12-19
"""

import requests
import json
import time

def test_gateway_logs():
    """–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤ API Gateway"""
    print("üîç –¢–µ—Å—Ç –ª–æ–≥–æ–≤ API Gateway...")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API Gateway
    print("\n1Ô∏è‚É£ –ó–¥–æ—Ä–æ–≤—å–µ API Gateway:")
    try:
        response = requests.get("http://localhost:8000/health", timeout=5)
        print(f"‚úÖ Status: {response.status_code}")
        print(f"‚úÖ Response: {response.text}")
    except Exception as e:
        print(f"‚ùå Error: {e}")
    
    # –¢–µ—Å—Ç 2: –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º:")
    try:
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ User Service –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ User Service –Ω–∞–ø—Ä—è–º—É—é...")
        user_response = requests.get("http://localhost:8001/health", timeout=5)
        print(f"‚úÖ User Service Status: {user_response.status_code}")
        
        # –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä–∏–º —á–µ—Ä–µ–∑ API Gateway
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ API Gateway...")
        gateway_response = requests.get("http://localhost:8000/test-connection", timeout=5)
        print(f"‚úÖ Gateway Status: {gateway_response.status_code}")
        
        if gateway_response.status_code == 200:
            data = gateway_response.json()
            print(f"üìÑ Gateway Response: {json.dumps(data, indent=2, ensure_ascii=False)}")
            
            if data.get("user_service_status") == 503:
                print("‚ùå API Gateway –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ User Service")
                print("üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
                print("   - –†–∞–∑–Ω—ã–µ —Å–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
                print("   - –ë—Ä–∞–Ω–¥–º–∞—É—ç—Ä –±–ª–æ–∫–∏—Ä—É–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
                print("   - User Service –Ω–µ —Å–ª—É—à–∞–µ—Ç –Ω–∞ localhost")
                print("   - –ü—Ä–æ–±–ª–µ–º–∞ —Å DNS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º")
    except Exception as e:
        print(f"‚ùå Error: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
    try:
        import socket
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ localhost —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è localhost...")
        try:
            ip = socket.gethostbyname("localhost")
            print(f"‚úÖ localhost resolves to: {ip}")
        except Exception as e:
            print(f"‚ùå localhost resolution error: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø–æ—Ä—Ç—É 8001
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø–æ—Ä—Ç—É 8001...")
        try:
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(5)
            result = sock.connect_ex(("localhost", 8001))
            sock.close()
            if result == 0:
                print("‚úÖ –ü–æ—Ä—Ç 8001 –¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                print(f"‚ùå –ü–æ—Ä—Ç 8001 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (error code: {result})")
        except Exception as e:
            print(f"‚ùå Socket error: {e}")
            
    except Exception as e:
        print(f"‚ùå Error: {e}")

if __name__ == "__main__":
    test_gateway_logs() 
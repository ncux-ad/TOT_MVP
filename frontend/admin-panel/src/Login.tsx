/**
 * @file: Login.tsx
 * @description: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
 * @dependencies: React, axios
 * @created: 2024-01-28
 */
import React, { useState } from 'react';
import axios from 'axios';

interface LoginProps {
  onLoginSuccess: () => void;
}

const Login: React.FC<LoginProps> = ({ onLoginSuccess }) => {
  console.log('üîê –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Login –∑–∞–≥—Ä—É–∂–µ–Ω');
  
  const [email, setEmail] = useState('admin@tot.ru');
  const [password, setPassword] = useState('admin123');
  const [loading, setLoading] = useState(false);
  const [message, setMessage] = useState('');

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setMessage('');
    
    try {
      console.log('üöÄ –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞:', { email });
      
      const response = await axios.post('/auth/login', {
        email,
        password
      });
      
      console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥:', response.data);
      
      // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –æ—Ç–≤–µ—Ç–∞
      const responseData = response.data.data || response.data;
      const token = responseData.access_token;
      
      if (token) {
        console.log('üîë –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω:', token.substring(0, 20) + '...');
        localStorage.setItem('adminToken', token);
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º axios –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–æ–∫–µ–Ω–∞
        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;
        
        setMessage('–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
        setTimeout(() => {
          onLoginSuccess();
        }, 1000);
      } else {
        console.error('‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ:', responseData);
        setMessage('–û—à–∏–±–∫–∞: —Ç–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞');
      }
      
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error);
      setMessage(`–û—à–∏–±–∫–∞: ${error.response?.data?.detail || error.message}`);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={{ 
      maxWidth: '400px', 
      margin: '50px auto', 
      padding: '20px',
      border: '1px solid #ddd',
      borderRadius: '8px'
    }}>
      <h2>–í—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</h2>
      
      <form onSubmit={handleLogin}>
        <div style={{ marginBottom: '15px' }}>
          <label>Email:</label>
          <input
            type="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            style={{ 
              width: '100%', 
              padding: '8px', 
              marginTop: '5px',
              border: '1px solid #ccc',
              borderRadius: '4px'
            }}
            required
          />
        </div>
        
        <div style={{ marginBottom: '15px' }}>
          <label>–ü–∞—Ä–æ–ª—å:</label>
          <input
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            style={{ 
              width: '100%', 
              padding: '8px', 
              marginTop: '5px',
              border: '1px solid #ccc',
              borderRadius: '4px'
            }}
            required
          />
        </div>
        
        <button
          type="submit"
          disabled={loading}
          style={{
            width: '100%',
            padding: '10px',
            backgroundColor: loading ? '#ccc' : '#007bff',
            color: 'white',
            border: 'none',
            borderRadius: '4px',
            cursor: loading ? 'not-allowed' : 'pointer'
          }}
        >
          {loading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
        </button>
      </form>
      
      {message && (
        <div style={{ 
          marginTop: '15px', 
          padding: '10px', 
          backgroundColor: message.includes('–£—Å–ø–µ—à–Ω—ã–π') ? '#d4edda' : '#f8d7da',
          border: '1px solid ' + (message.includes('–£—Å–ø–µ—à–Ω—ã–π') ? '#c3e6cb' : '#f5c6cb'),
          borderRadius: '4px',
          color: message.includes('–£—Å–ø–µ—à–Ω—ã–π') ? '#155724' : '#721c24'
        }}>
          {message}
        </div>
      )}
      
      <div style={{ marginTop: '20px', fontSize: '14px', color: '#666' }}>
        <strong>–î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ:</strong><br />
        Email: admin@tot.ru<br />
        –ü–∞—Ä–æ–ª—å: admin123
      </div>
    </div>
  );
};

export default Login;
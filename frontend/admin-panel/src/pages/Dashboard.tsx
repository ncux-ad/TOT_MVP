/**
 * @file: Dashboard.tsx
 * @description: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Å –æ–±–∑–æ—Ä–æ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 * @dependencies: React, @mui/material, @mui/icons-material, axios
 * @created: 2024-01-28
 */
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import {
  Box,
  Typography,
  Paper,
  Card,
  CardContent,
  CardHeader,
  CircularProgress,
  Alert
} from '@mui/material';

import {
  People as PeopleIcon,
  LocalHospital as DoctorsIcon,
  Business as ClinicsIcon,
  Event as AppointmentsIcon
} from '@mui/icons-material';

interface DashboardStats {
  users: number;
  doctors: number;
  clinics: number;
  appointments: number;
}

const Dashboard: React.FC = () => {
  console.log('üìä –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Dashboard –∑–∞–≥—Ä—É–∂–µ–Ω');
  
  const [stats, setStats] = useState<DashboardStats>({
    users: 0,
    doctors: 0,
    clinics: 0,
    appointments: 0
  });
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    fetchDashboardStats();
  }, []);

  const fetchDashboardStats = async () => {
    try {
      console.log('üìä –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–∞—à–±–æ—Ä–¥–∞...');
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
      const usersResponse = await axios.get('/admin/users?page=1&limit=100');
      const usersData = usersResponse.data.data || usersResponse.data;
      const users = usersData.users || [];
      
      // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ä–æ–ª—è–º
      const statsData = {
        users: users.length,
        doctors: users.filter((user: any) => user.role === 'doctor').length,
        clinics: 2, // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        appointments: 3 // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
      };
      
      console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', statsData);
      setStats(statsData);
    } catch (err: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', err);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É');
    } finally {
      setLoading(false);
    }
  };

  const statsConfig = [
    { 
      title: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', 
      value: stats.users.toString(), 
      icon: PeopleIcon, 
      color: 'primary.main',
      description: '–í—Å–µ–≥–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö'
    },
    { 
      title: '–í—Ä–∞—á–∏', 
      value: stats.doctors.toString(), 
      icon: DoctorsIcon, 
      color: 'success.main',
      description: '–ê–∫—Ç–∏–≤–Ω—ã—Ö –≤—Ä–∞—á–µ–π'
    },
    { 
      title: '–ö–ª–∏–Ω–∏–∫–∏', 
      value: stats.clinics.toString(), 
      icon: ClinicsIcon, 
      color: 'warning.main',
      description: '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∏–Ω–∏–∫'
    },
    { 
      title: '–ó–∞–ø–∏—Å–∏', 
      value: stats.appointments.toString(), 
      icon: AppointmentsIcon, 
      color: 'info.main',
      description: '–ó–∞–ø–∏—Å–µ–π –Ω–∞ –ø—Ä–∏—ë–º'
    }
  ];

  if (loading) {
    return (
      <Box p={3} display="flex" justifyContent="center" alignItems="center" minHeight="400px">
        <CircularProgress />
      </Box>
    );
  }

  if (error) {
    return (
      <Box p={3}>
        <Alert severity="error" sx={{ mb: 3 }}>
          {error}
        </Alert>
      </Box>
    );
  }

  return (
    <Box p={3}>
      <Typography variant="h4" component="h1" gutterBottom>
        –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
      </Typography>
      
      <Typography variant="body1" color="textSecondary" sx={{ mb: 4 }}>
        –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¢–û–¢. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –≤—Ä–∞—á–∞–º–∏, –∫–ª–∏–Ω–∏–∫–∞–º–∏ –∏ –∑–∞–ø–∏—Å—è–º–∏.
      </Typography>

      <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', sm: 'repeat(2, 1fr)', md: 'repeat(4, 1fr)' }, gap: 3 }}>
        {statsConfig.map((stat) => {
          const IconComponent = stat.icon;
          
          return (
            <Card key={stat.title} elevation={2}>
              <CardContent>
                <Box display="flex" alignItems="center" mb={2}>
                  <Box 
                    sx={{ 
                      p: 1, 
                      borderRadius: 1, 
                      backgroundColor: stat.color,
                      color: 'white',
                      mr: 2
                    }}
                  >
                    <IconComponent />
                  </Box>
                  <Box>
                    <Typography variant="h4" component="div" fontWeight="bold">
                      {stat.value}
                    </Typography>
                    <Typography variant="body2" color="textSecondary">
                      {stat.title}
                    </Typography>
                  </Box>
                </Box>
                <Typography variant="body2" color="textSecondary">
                  {stat.description}
                </Typography>
              </CardContent>
            </Card>
          );
        })}
      </Box>

      <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: 'repeat(2, 1fr)' }, gap: 3, mt: 3 }}>
        <Paper elevation={2} sx={{ p: 3 }}>
          <Typography variant="h6" gutterBottom>
            –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
          </Typography>
          <Typography variant="body2" color="textSecondary">
            ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
          </Typography>
          <Typography variant="body2" color="textSecondary">
            ‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–∞—á–∞–º–∏ –∏ –∫–ª–∏–Ω–∏–∫–∞–º–∏
          </Typography>
          <Typography variant="body2" color="textSecondary">
            ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á—ë—Ç–æ–≤ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
          </Typography>
        </Paper>
        
        <Paper elevation={2} sx={{ p: 3 }}>
          <Typography variant="h6" gutterBottom>
            –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
          </Typography>
          <Typography variant="body2" color="textSecondary">
            ‚Ä¢ –í–µ—Ä—Å–∏—è: 2.0
          </Typography>
          <Typography variant="body2" color="textSecondary">
            ‚Ä¢ –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–Ω–∞
          </Typography>
          <Typography variant="body2" color="textSecondary">
            ‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: –°–µ–≥–æ–¥–Ω—è
          </Typography>
        </Paper>
      </Box>
    </Box>
  );
};

export default Dashboard; 
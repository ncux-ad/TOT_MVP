import React, { useState } from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';

// –ü—Ä–æ—Å—Ç—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü
const LoginPage: React.FC = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = (e: React.FormEvent) => {
    e.preventDefault();
    // –ü—Ä–æ—Å—Ç–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è –¥–µ–º–æ
    if (email && password) {
      localStorage.setItem('token', 'demo-token');
      localStorage.setItem('user', JSON.stringify({ email, name: '–î–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' }));
      window.location.href = '/';
    }
  };

  return (
    <div style={{ 
      padding: '20px', 
      textAlign: 'center',
      maxWidth: '400px',
      margin: '50px auto',
      backgroundColor: 'white',
      borderRadius: '8px',
      boxShadow: '0 2px 10px rgba(0,0,0,0.1)'
    }}>
      <h2>–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h2>
      <form onSubmit={handleLogin} style={{ textAlign: 'left' }}>
        <div style={{ marginBottom: '15px' }}>
          <label style={{ display: 'block', marginBottom: '5px' }}>Email:</label>
          <input
            type="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            style={{
              width: '100%',
              padding: '8px',
              border: '1px solid #ddd',
              borderRadius: '4px'
            }}
            placeholder="patient@example.com"
          />
        </div>
        <div style={{ marginBottom: '15px' }}>
          <label style={{ display: 'block', marginBottom: '5px' }}>–ü–∞—Ä–æ–ª—å:</label>
          <input
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            style={{
              width: '100%',
              padding: '8px',
              border: '1px solid #ddd',
              borderRadius: '4px'
            }}
            placeholder="password123"
          />
        </div>
        <button
          type="submit"
          style={{
            width: '100%',
            padding: '10px',
            backgroundColor: '#2563eb',
            color: 'white',
            border: 'none',
            borderRadius: '4px',
            cursor: 'pointer'
          }}
        >
          –í–æ–π—Ç–∏
        </button>
      </form>
      <p style={{ marginTop: '15px', fontSize: '14px', color: '#666' }}>
        –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ: patient@example.com / password123
      </p>
    </div>
  );
};

const RegisterPage: React.FC = () => (
  <div style={{ padding: '20px', textAlign: 'center' }}>
    <h2>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>
    <p>–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
  </div>
);

const HomePage: React.FC = () => {
  const user = JSON.parse(localStorage.getItem('user') || '{}');

  return (
    <div style={{ padding: '20px', textAlign: 'center' }}>
      <h2>–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</h2>
      <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¢–û–¢ - –¢–≤–æ—è –¢–æ—á–∫–∞ –û–ø–æ—Ä—ã!</p>
      <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.name || '–ì–æ—Å—Ç—å'}</p>
      <p>–í—Ä–µ–º—è: {new Date().toLocaleString('ru-RU')}</p>
      
      <div style={{ marginTop: '20px' }}>
        <h3>–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</h3>
        <div style={{ display: 'flex', justifyContent: 'center', gap: '10px', flexWrap: 'wrap' }}>
          <a href="/doctors" style={{ padding: '10px 20px', backgroundColor: '#2563eb', color: 'white', textDecoration: 'none', borderRadius: '4px' }}>
            –ù–∞–π—Ç–∏ –≤—Ä–∞—á–∞
          </a>
          <a href="/bookings" style={{ padding: '10px 20px', backgroundColor: '#10b981', color: 'white', textDecoration: 'none', borderRadius: '4px' }}>
            –ú–æ–∏ –∑–∞–ø–∏—Å–∏
          </a>
          <a href="/payments" style={{ padding: '10px 20px', backgroundColor: '#f59e0b', color: 'white', textDecoration: 'none', borderRadius: '4px' }}>
            –ü–ª–∞—Ç–µ–∂–∏
          </a>
          <a href="/emergency" style={{ padding: '10px 20px', backgroundColor: '#ef4444', color: 'white', textDecoration: 'none', borderRadius: '4px' }}>
            –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤
          </a>
        </div>
      </div>
    </div>
  );
};

const ProfilePage: React.FC = () => {
  const user = JSON.parse(localStorage.getItem('user') || '{}');

  return (
    <div style={{ padding: '20px', textAlign: 'center' }}>
      <h2>–ü—Ä–æ—Ñ–∏–ª—å</h2>
      <div style={{ maxWidth: '400px', margin: '0 auto', textAlign: 'left' }}>
        <p><strong>–ò–º—è:</strong> {user.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
        <p><strong>Email:</strong> {user.email || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
        <p><strong>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</strong> {new Date().toLocaleDateString('ru-RU')}</p>
      </div>
    </div>
  );
};

const DoctorsPage: React.FC = () => (
  <div style={{ padding: '20px', textAlign: 'center' }}>
    <h2>–í—Ä–∞—á–∏</h2>
    <div style={{ maxWidth: '600px', margin: '0 auto' }}>
      <div style={{ border: '1px solid #ddd', padding: '15px', margin: '10px 0', borderRadius: '4px' }}>
        <h3>–î–æ–∫—Ç–æ—Ä –ò–≤–∞–Ω–æ–≤ –ò.–ü.</h3>
        <p><strong>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:</strong> –ö–∞—Ä–¥–∏–æ–ª–æ–≥</p>
        <p><strong>–†–µ–π—Ç–∏–Ω–≥:</strong> ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê (4.8)</p>
        <p><strong>–û–ø—ã—Ç:</strong> 15 –ª–µ—Ç</p>
        <button style={{ padding: '8px 16px', backgroundColor: '#2563eb', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>
          –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
        </button>
      </div>
      
      <div style={{ border: '1px solid #ddd', padding: '15px', margin: '10px 0', borderRadius: '4px' }}>
        <h3>–î–æ–∫—Ç–æ—Ä –ü–µ—Ç—Ä–æ–≤–∞ –ê.–°.</h3>
        <p><strong>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:</strong> –¢–µ—Ä–∞–ø–µ–≤—Ç</p>
        <p><strong>–†–µ–π—Ç–∏–Ω–≥:</strong> ‚≠ê‚≠ê‚≠ê‚≠ê (4.5)</p>
        <p><strong>–û–ø—ã—Ç:</strong> 12 –ª–µ—Ç</p>
        <button style={{ padding: '8px 16px', backgroundColor: '#2563eb', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>
          –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
        </button>
      </div>
    </div>
  </div>
);

const BookingsPage: React.FC = () => (
  <div style={{ padding: '20px', textAlign: 'center' }}>
    <h2>–ó–∞–ø–∏—Å–∏</h2>
    <div style={{ maxWidth: '600px', margin: '0 auto' }}>
      <div style={{ border: '1px solid #ddd', padding: '15px', margin: '10px 0', borderRadius: '4px' }}>
        <h3>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∫–∞—Ä–¥–∏–æ–ª–æ–≥–∞</h3>
        <p><strong>–í—Ä–∞—á:</strong> –î–æ–∫—Ç–æ—Ä –ò–≤–∞–Ω–æ–≤ –ò.–ü.</p>
        <p><strong>–î–∞—Ç–∞:</strong> 15 —è–Ω–≤–∞—Ä—è 2024, 14:00</p>
        <p><strong>–°—Ç–∞—Ç—É—Å:</strong> <span style={{ color: '#10b981' }}>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ</span></p>
      </div>
      
      <div style={{ border: '1px solid #ddd', padding: '15px', margin: '10px 0', borderRadius: '4px' }}>
        <h3>–û–±—â–∏–π –æ—Å–º–æ—Ç—Ä</h3>
        <p><strong>–í—Ä–∞—á:</strong> –î–æ–∫—Ç–æ—Ä –ü–µ—Ç—Ä–æ–≤–∞ –ê.–°.</p>
        <p><strong>–î–∞—Ç–∞:</strong> 20 —è–Ω–≤–∞—Ä—è 2024, 10:30</p>
        <p><strong>–°—Ç–∞—Ç—É—Å:</strong> <span style={{ color: '#f59e0b' }}>–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</span></p>
      </div>
    </div>
  </div>
);

const PaymentsPage: React.FC = () => (
  <div style={{ padding: '20px', textAlign: 'center' }}>
    <h2>–ü–ª–∞—Ç–µ–∂–∏</h2>
    <div style={{ maxWidth: '600px', margin: '0 auto' }}>
      <div style={{ backgroundColor: '#f0f9ff', padding: '20px', borderRadius: '8px', marginBottom: '20px' }}>
        <h3>–ë–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞</h3>
        <p style={{ fontSize: '24px', fontWeight: 'bold', color: '#2563eb' }}>2,500 ‚ÇΩ</p>
      </div>
      
      <div style={{ border: '1px solid #ddd', padding: '15px', margin: '10px 0', borderRadius: '4px' }}>
        <h3>–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</h3>
        <div style={{ textAlign: 'left' }}>
          <p><strong>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∫–∞—Ä–¥–∏–æ–ª–æ–≥–∞</strong> - <span style={{ color: '#ef4444' }}>-1,500 ‚ÇΩ</span></p>
          <p><strong>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞</strong> - <span style={{ color: '#10b981' }}>+3,000 ‚ÇΩ</span></p>
          <p><strong>–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤</strong> - <span style={{ color: '#ef4444' }}>-800 ‚ÇΩ</span></p>
        </div>
      </div>
    </div>
  </div>
);

const ChatPage: React.FC = () => (
  <div style={{ padding: '20px', textAlign: 'center' }}>
    <h2>–ß–∞—Ç</h2>
    <div style={{ maxWidth: '600px', margin: '0 auto' }}>
      <div style={{ border: '1px solid #ddd', padding: '15px', margin: '10px 0', borderRadius: '4px' }}>
        <h3>–î–æ–∫—Ç–æ—Ä –ò–≤–∞–Ω–æ–≤ –ò.–ü.</h3>
        <p><strong>–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:</strong> –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ö–∞–∫ –≤–∞—à–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ?</p>
        <p><strong>–í—Ä–µ–º—è:</strong> 14:30</p>
        <button style={{ padding: '8px 16px', backgroundColor: '#2563eb', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>
          –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç
        </button>
      </div>
    </div>
  </div>
);

const EmergencyPage: React.FC = () => (
  <div style={{ padding: '20px', textAlign: 'center' }}>
    <h2>–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã</h2>
    <div style={{ maxWidth: '600px', margin: '0 auto' }}>
      <div style={{ backgroundColor: '#fef2f2', border: '2px solid #ef4444', padding: '20px', borderRadius: '8px', marginBottom: '20px' }}>
        <h3 style={{ color: '#ef4444' }}>üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤</h3>
        <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é —Ç–æ–ª—å–∫–æ –≤ —Å–ª—É—á–∞–µ —Ä–µ–∞–ª—å–Ω–æ–π —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏</p>
        <button style={{ 
          padding: '15px 30px', 
          backgroundColor: '#ef4444', 
          color: 'white', 
          border: 'none', 
          borderRadius: '4px', 
          cursor: 'pointer',
          fontSize: '16px',
          fontWeight: 'bold'
        }}>
          –≠–ö–°–¢–†–ï–ù–ù–´–ô –í–´–ó–û–í
        </button>
      </div>
      
      <div style={{ border: '1px solid #ddd', padding: '15px', margin: '10px 0', borderRadius: '4px' }}>
        <h3>–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã</h3>
        <p><strong>–°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å:</strong> 103</p>
        <p><strong>–í–∞—à –≤—Ä–∞—á:</strong> –î–æ–∫—Ç–æ—Ä –ò–≤–∞–Ω–æ–≤ –ò.–ü.</p>
      </div>
    </div>
  </div>
);

// –ü—Ä–æ—Å—Ç–æ–π Layout –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
const Layout: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const handleLogout = () => {
    localStorage.removeItem('token');
    localStorage.removeItem('user');
    window.location.href = '/login';
  };

  return (
    <div style={{ minHeight: '100vh', backgroundColor: '#f5f5f5' }}>
      <nav style={{ backgroundColor: '#2563eb', color: 'white', padding: '1rem', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
        <h1 style={{ margin: 0 }}>–¢–û–¢ - –¢–≤–æ—è –¢–æ—á–∫–∞ –û–ø–æ—Ä—ã</h1>
        <div>
          <a href="/" style={{ color: 'white', textDecoration: 'none', marginRight: '15px' }}>–ì–ª–∞–≤–Ω–∞—è</a>
          <a href="/doctors" style={{ color: 'white', textDecoration: 'none', marginRight: '15px' }}>–í—Ä–∞—á–∏</a>
          <a href="/bookings" style={{ color: 'white', textDecoration: 'none', marginRight: '15px' }}>–ó–∞–ø–∏—Å–∏</a>
          <a href="/payments" style={{ color: 'white', textDecoration: 'none', marginRight: '15px' }}>–ü–ª–∞—Ç–µ–∂–∏</a>
          <a href="/chat" style={{ color: 'white', textDecoration: 'none', marginRight: '15px' }}>–ß–∞—Ç</a>
          <a href="/emergency" style={{ color: 'white', textDecoration: 'none', marginRight: '15px' }}>–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ</a>
          <button 
            onClick={handleLogout}
            style={{ 
              backgroundColor: 'transparent', 
              color: 'white', 
              border: '1px solid white', 
              padding: '5px 10px', 
              borderRadius: '4px', 
              cursor: 'pointer' 
            }}
          >
            –í—ã–π—Ç–∏
          </button>
        </div>
      </nav>
      <main>{children}</main>
    </div>
  );
};

// Protected Route Component
const ProtectedRoute: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const token = localStorage.getItem('token');
  return token ? <Layout>{children}</Layout> : <Navigate to="/login" replace />;
};

// Public Route Component (redirect if already logged in)
const PublicRoute: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const token = localStorage.getItem('token');
  return token ? <Navigate to="/" replace /> : <>{children}</>;
};

const App: React.FC = () => {
  return (
    <Router>
      <Routes>
        {/* Public Routes */}
        <Route
          path="/login"
          element={
            <PublicRoute>
              <LoginPage />
            </PublicRoute>
          }
        />
        <Route
          path="/register"
          element={
            <PublicRoute>
              <RegisterPage />
            </PublicRoute>
          }
        />

        {/* Protected Routes */}
        <Route
          path="/"
          element={
            <ProtectedRoute>
              <HomePage />
            </ProtectedRoute>
          }
        />
        <Route
          path="/profile"
          element={
            <ProtectedRoute>
              <ProfilePage />
            </ProtectedRoute>
          }
        />
        <Route
          path="/doctors"
          element={
            <ProtectedRoute>
              <DoctorsPage />
            </ProtectedRoute>
          }
        />
        <Route
          path="/bookings"
          element={
            <ProtectedRoute>
              <BookingsPage />
            </ProtectedRoute>
          }
        />
        <Route
          path="/payments"
          element={
            <ProtectedRoute>
              <PaymentsPage />
            </ProtectedRoute>
          }
        />
        <Route
          path="/chat"
          element={
            <ProtectedRoute>
              <ChatPage />
            </ProtectedRoute>
          }
        />
        <Route
          path="/emergency"
          element={
            <ProtectedRoute>
              <EmergencyPage />
            </ProtectedRoute>
          }
        />

        {/* Default redirect */}
        <Route path="*" element={<Navigate to="/" replace />} />
      </Routes>
    </Router>
  );
};

export default App; 
#!/usr/bin/env python3
"""
@file: test_gateway_final.py
@description: –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ API Gateway
@dependencies: requests
@created: 2024-12-19
"""

import requests
import json

def test_gateway_final():
    """–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ API Gateway"""
    print("üîç –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç API Gateway...")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API Gateway
    print("\n1Ô∏è‚É£ –ó–¥–æ—Ä–æ–≤—å–µ API Gateway:")
    try:
        response = requests.get("http://localhost:8000/health", timeout=5)
        print(f"‚úÖ Status: {response.status_code}")
        print(f"‚úÖ Response: {response.text}")
    except Exception as e:
        print(f"‚ùå Error: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ User Service –Ω–∞–ø—Ä—è–º—É—é
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ User Service –Ω–∞–ø—Ä—è–º—É—é:")
    try:
        response = requests.get("http://localhost:8001/health", timeout=5)
        print(f"‚úÖ Status: {response.status_code}")
        print(f"‚úÖ Response: {response.text}")
    except Exception as e:
        print(f"‚ùå Error: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ API Gateway
    print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ API Gateway:")
    try:
        response = requests.get("http://localhost:8000/test-connection", timeout=5)
        print(f"‚úÖ Status: {response.status_code}")
        print(f"‚úÖ Response: {response.text}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"üìÑ Parsed Response: {json.dumps(data, indent=2, ensure_ascii=False)}")
            
            if data.get("user_service_status") == 503:
                print("‚ùå API Gateway –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ User Service")
                print("üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
                print("   - API Gateway –∏ User Service –∑–∞–ø—É—â–µ–Ω—ã –≤ —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö")
                print("   - –†–∞–∑–Ω—ã–µ —Å–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
                print("   - –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏")
                print("   - –ü—Ä–æ–±–ª–µ–º–∞ —Å SSL/—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏")
    except Exception as e:
        print(f"‚ùå Error: {e}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ API Gateway
    print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ API Gateway:")
    try:
        auth_data = {"email": "admin@tot.ru", "password": "admin123"}
        response = requests.post(
            "http://localhost:8000/auth/login",
            json=auth_data,
            headers={"Content-Type": "application/json"},
            timeout=5
        )
        print(f"‚úÖ Status: {response.status_code}")
        print(f"‚úÖ Response: {response.text}")
        
        if response.status_code == 200:
            try:
                data = response.json()
                print(f"üìÑ Parsed Response: {json.dumps(data, indent=2, ensure_ascii=False)}")
            except:
                print("‚ùå Response is not JSON")
    except Exception as e:
        print(f"‚ùå Error: {e}")

if __name__ == "__main__":
    test_gateway_final() 
#!/usr/bin/env python3
"""
@file: debug_api_gateway.py
@description: –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API Gateway
@dependencies: requests, json
@created: 2024-12-19
"""

import requests
import json
import time

def debug_api_gateway():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API Gateway"""
    base_url = "http://localhost:8000"
    
    print("üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API Gateway...")
    
    # 1. –¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ User Service
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ User Service:")
    try:
        response = requests.post(
            "http://localhost:8001/auth/login",
            json={"email": "admin@tot.ru", "password": "admin123"},
            headers={"Content-Type": "application/json"}
        )
        print(f"‚úÖ User Service direct: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"üìÑ User Service –æ—Ç–≤–µ—Ç: {json.dumps(data, indent=2, ensure_ascii=False)}")
        else:
            print(f"‚ùå User Service –æ—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå User Service –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
    
    # 2. –¢–µ—Å—Ç API Gateway —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç API Gateway:")
    try:
        response = requests.post(
            f"{base_url}/auth/login",
            json={"email": "admin@tot.ru", "password": "admin123"},
            headers={"Content-Type": "application/json"}
        )
        print(f"‚úÖ API Gateway: {response.status_code}")
        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–∫–∏: {dict(response.headers)}")
        print(f"üìÑ –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            try:
                data = response.json()
                print(f"üìÑ JSON –æ—Ç–≤–µ—Ç: {json.dumps(data, indent=2, ensure_ascii=False)}")
            except:
                print("‚ùå –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è JSON")
    except Exception as e:
        print(f"‚ùå API Gateway –æ—à–∏–±–∫–∞: {e}")
    
    # 3. –¢–µ—Å—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ API Gateway
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤:")
    try:
        response = requests.get(f"{base_url}/test-connection")
        print(f"‚úÖ Test connection: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"üìÑ Connection test: {json.dumps(data, indent=2, ensure_ascii=False)}")
    except Exception as e:
        print(f"‚ùå Test connection –æ—à–∏–±–∫–∞: {e}")
    
    try:
        response = requests.get(f"{base_url}/test-auth")
        print(f"‚úÖ Test auth: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"üìÑ Auth test: {json.dumps(data, indent=2, ensure_ascii=False)}")
    except Exception as e:
        print(f"‚ùå Test auth –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏...")
    debug_api_gateway()
    print("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞") 